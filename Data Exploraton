/*
CustomersDatabase Data Exploration 

Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types

*/

-- Determine the top 3 product categories with the highest total overall spend. 
-- Query should return a table with the product category and total spend in that category.

SELECT productcategory,
	   SUM(transactionamount) AS totalspend
FROM transactions
GROUP BY productcategory
ORDER BY totalspend DESC
LIMIT 3;

-- Determine the average transaction by the customer for the top category. 
-- Query should return a table with the customer's ID name, top category identified in the prior question and average spend by customer in that category.

SELECT id, name, productcategory, AVG(transactionamount) AS  Averagespend
FROM customers LEFT JOIN transactions
ON id=transactions.customer_id
WHERE productcategory = "men's clothing" 
GROUP BY id, name
ORDER BY Averagespend DESC;


-- For customers who spend at least $200 in any category, determine the category they spent the most money in during 2022.
-- Query should return a table with at least the customer's names, top category, and total spend

WITH TopCategoryPerCustomer AS (
    SELECT customer_id, productcategory, SUM(transactionamount) AS TotalSpendPerCategory,
    ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY SUM(transactionamount) DESC) AS CategoryRank
    FROM
    transactions
    WHERE
    transactionamount >= 200
    AND date LIKE '-%22%-'
    GROUP BY
    customer_id, productcategory
)

SELECT
customers.name, TopCategoryPerCustomer.productcategory AS TopCategory,SUM(TopCategoryPerCustomer.TotalSpendPerCategory) AS TotalSpend
FROM
customers
LEFT JOIN
TopCategoryPerCustomer ON customers.id = TopCategoryPerCustomer.customer_id AND TopCategoryPerCustomer.CategoryRank = 1
GROUP BY
customers.name, TopCategoryPerCustomer.productcategory
ORDER BY
TotalSpend DESC;

-- Determine how many customers fall into the bronze, silver and gold category as of the end of 2022. 
-- Your output should consist of a table with 2 columns (status and count) and 3 rows (bronze, silver, gold)

QUERY
SELECT loyaltystatus, COUNT (customer_id) AS CustomerCount
FROM status
WHERE date LIKE '%-22%'
GROUP by loyaltystatus
ORDER BY CustomerCount DESC;

-- Create a table which shows the total average spend by category for each customer, along with their customer ID, name, and latest loyalty status

QUERY
WITH LatestLoyaltyStatus AS (
    SELECT
        customer_id,
        MAX(date) AS latest_status_date,
        FIRST_VALUE(loyaltystatus) OVER (PARTITION BY customer_id ORDER BY date DESC) AS latest_loyalty_status
    FROM
        status
    GROUP BY
       customer_id
)

SELECT customers.id, customers.name, LatestLoyaltyStatus.latest_loyalty_status, SUM(transactions.transactionamount) AS TotalSpend, 
	AVG(transactions.transactionamount) AS AverageSpend
FROM
    customers
JOIN
    transactions ON customers.id = transactions.customer_id
JOIN
    LatestLoyaltyStatus ON customers.id = LatestLoyaltyStatus.customer_id   
GROUP BY   customers.id, customers.name, LatestLoyaltyStatus.latest_loyalty_status


-- Write a query to return the names and loyalty statuses of the top 3 customers who spent the most money.

WITH LatestLoyaltyStatus AS (
    SELECT
        customer_id,
        MAX(date) AS latest_status_date,
        FIRST_VALUE(loyaltystatus) OVER (PARTITION BY customer_id ORDER BY date DESC) AS latest_loyalty_status
    FROM
        status
    GROUP BY
       customer_id
)

SELECT customers.id, customers.name, LatestLoyaltyStatus.latest_loyalty_status, SUM(transactions.transactionamount) AS TotalSpend, 
	AVG(transactions.transactionamount) AS AverageSpend
FROM
    customers
JOIN
    transactions ON customers.id = transactions.customer_id
JOIN
    LatestLoyaltyStatus ON customers.id = LatestLoyaltyStatus.customer_id   
GROUP BY   customers.id, customers.name, LatestLoyaltyStatus.latest_loyalty_status

-- Determine the average spend by city on household items for 2022. Query should return a table with the city name and corresponding average spend in the given category.

SELECT city, AVG(transactionamount) AS AverageCitySpend
FROM transactions
WHERE productcategory = "household items"
GROUP BY city
ORDER BY AverageCitySpend;

